<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hello</title>
    <link>https://Harsh-Garg306.github.io/posts/</link>
    <description>Recent content in Posts on Hello</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Jul 2021 20:09:16 +0530</lastBuildDate><atom:link href="https://Harsh-Garg306.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JULY9</title>
      <link>https://Harsh-Garg306.github.io/posts/july9/</link>
      <pubDate>Fri, 09 Jul 2021 20:09:16 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/july9/</guid>
      <description>JULY 9 Installed kubectl curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/darwin/amd64/kubectl chmod +x ./kubectl mkdir -p $HOME/bin &amp;amp;&amp;amp; cp ./kubectl $HOME/bin/kubectl &amp;amp;&amp;amp; export PATH=$HOME/bin:$PATH kubectl version --short --client 
Then we tried to make cluster using the following link:
create an eks cluster
But we got an error and was not able to come out with solution:
Error: unable to determine AMI to use: error getting AMI from SSM Parameter Store: AccessDeniedException: User: arn:aws:iam::367704883367:user/f20190762@goa.</description>
    </item>
    
    <item>
      <title>GITREBASEvsMERGE</title>
      <link>https://Harsh-Garg306.github.io/posts/gitrebasevsmerge/</link>
      <pubDate>Thu, 08 Jul 2021 13:03:36 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/gitrebasevsmerge/</guid>
      <description>GIT REBASE vs GIT MERGE Made a file and added the file learn.txt 
Verifying using :
git log 
initially we have no branch except master git branch This command shows how many branches are present and on which branch we are present. 
git branch shows the branch on which we are present which is shown by branch name preceded by asterisk.
made feature branch git branch branch_name switch from one branch to another git checkout branch_name checkout command will take us to the branch whose name we entered in the &amp;ldquo;git checkout branch_name&amp;rdquo; command.</description>
    </item>
    
    <item>
      <title>JUNE30</title>
      <link>https://Harsh-Garg306.github.io/posts/june30/</link>
      <pubDate>Thu, 08 Jul 2021 11:29:04 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/june30/</guid>
      <description>Creating a VPC using terraform Make the necessary files Create a new directory and change to newly created directory.
mkdir terraform-vpc_1 cd terraform-vpc_1 1.Now create a new file in the same directory i.e. main.tf

The configuration that we will write in the file will do 4 things:
  Create a VPC Create an Internet Gateway &amp;amp; attach it to the VPC Create both public &amp;amp; private subnets Create a NAT Gateway Create a route table   The Internet gateway allows the traffic within the VPC to be accessible to other users.</description>
    </item>
    
    <item>
      <title>JUNE29</title>
      <link>https://Harsh-Garg306.github.io/posts/june29/</link>
      <pubDate>Wed, 30 Jun 2021 15:28:34 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/june29/</guid>
      <description>Creating a VM in AWS using Terraform 1.aws configure (don&amp;rsquo;t release these keys)
  enter your access and secret keys enter your region.   2.Each Terraform configuration must be in its own working directory.Change to working directory.

3.Create a file to define your infrastructure.

4.Initialize the directory

5.Format and validate the configuration
  The command updates configurations in the current directory. If the file was already formatted correctly, Terraform wonâ€™t return any output.</description>
    </item>
    
    <item>
      <title>June9</title>
      <link>https://Harsh-Garg306.github.io/posts/june9/</link>
      <pubDate>Thu, 10 Jun 2021 15:54:48 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/june9/</guid>
      <description>Hosting the site adding files to public and then pushing it to master 
commits: adding files to public 
site is ready to be published Open the site</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://Harsh-Garg306.github.io/posts/git/</link>
      <pubDate>Mon, 07 Jun 2021 23:11:08 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/git/</guid>
      <description>GIT 1.Git is the most commonly used version control system.
2.Git tracks the changes you make to files
  you have a record of what has been done, can revert to specific versions should you ever need to, it also makes collaboration easier, allowing changes by multiple people to all be merged into one source.   3.The commands used to keep the track of changes, help in creating new repository and all other functions which you could do on GitHub now can be done on terminal.</description>
    </item>
    
    <item>
      <title>MARKDOWN</title>
      <link>https://Harsh-Garg306.github.io/posts/markdown/</link>
      <pubDate>Mon, 07 Jun 2021 22:46:38 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/markdown/</guid>
      <description>MARKDOWN   Markdown is a lightweight and easy-to-use syntax for styling all forms of writing on the GitHub platform. It was created back in 2004 by John Gruber (of Daring Fireball) as an easy way for non-coders to write in a format that could be easily converted into HTML. Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown.</description>
    </item>
    
    <item>
      <title>MYFIRSTGITHUBPAGE</title>
      <link>https://Harsh-Garg306.github.io/posts/myfirstgithubpage/</link>
      <pubDate>Mon, 07 Jun 2021 22:29:28 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/myfirstgithubpage/</guid>
      <description>MYFIRSTGITHUBPAGE 1.Github let me create my first page by using simple steps.
2.I used Markdown for styling for githubpage.
3.Creating via help of GitHub was really helpful and easy to progress.
4.Just followed this 5 steps to create my first page.
5.My first GitHub page</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://Harsh-Garg306.github.io/posts/github/</link>
      <pubDate>Mon, 07 Jun 2021 21:21:02 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/github/</guid>
      <description>GITHUB 1.GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.
2.Development of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release.
3.GITHUB FEATURES
4.I learned various concepts in GitHub which are as follows:</description>
    </item>
    
    <item>
      <title>June 6</title>
      <link>https://Harsh-Garg306.github.io/posts/june6/</link>
      <pubDate>Sun, 06 Jun 2021 20:40:05 +0530</pubDate>
      
      <guid>https://Harsh-Garg306.github.io/posts/june6/</guid>
      <description>HUGO 1.Hugo is really helpful in creating static sites.
2.Static sites are those sites whose content doesn&amp;rsquo;t change for any user. The content viewed by any individual at any time remains the same.
3.It supports various themes which can be downloaded from github link to themes!
Created a new file JUNE6. 
Added the theme 
problem faced in creating first post 
Solved the issue by downloading the theme as zip file and copied in the same directory.</description>
    </item>
    
  </channel>
</rss>
